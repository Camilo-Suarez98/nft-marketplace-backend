// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Nft {
  id           String        @id @default(cuid())
  name         String
  description  String?
  price        Int
  size         Int
  property     String
  end_auction  DateTime?
  on_sale      Boolean
  NftOwner     NftOwner[]
  Transaction  Transaction[]
  Bid          Bid[]
  Like         Like[]
  user         User          @relation(fields: [userId], references: [id])
  userId       String
  category     Category      @relation(fields: [categoryId], references: [id])
  categoryId   Int
  collection   Collection    @relation(fields: [collectionId], references: [id])
  collectionId Int
}

model User {
  id         String     @id @default(cuid())
  first_name String
  last_name  String
  email      String
  password   String
  bio        String?
  role       Role       @default(USER)
  gender     String
  currency   String
  phone      String
  location   String
  address    String
  NftOwner   NftOwner[]
  Buyer      Buyer[]
  Seller     Seller[]
  Bid        Bid[]
  Like       Like[]
  Nft        Nft[]
}

model Transaction {
  id       String   @id @default(cuid())
  nft      Nft      @relation(fields: [nftId], references: [id])
  nftId    String
  buyer    Buyer    @relation(fields: [buyerId], references: [id])
  buyerId  String
  seller   Seller   @relation(fields: [sellerId], references: [id])
  sellerId String
  amount   Int
  date     DateTime
}

model NftOwner {
  id               String    @id @default(cuid())
  nft              Nft       @relation(fields: [nftId], references: [id])
  nftId            String
  user             User      @relation(fields: [userId], references: [id])
  userId           String
  adquisition_date DateTime  @default(now())
  sell_date        DateTime?
}

model Bid {
  id     Int      @id @default(autoincrement())
  amount Int
  date   DateTime
  nft    Nft      @relation(fields: [nftId], references: [id])
  nftId  String
  user   User     @relation(fields: [userId], references: [id])
  userId String
}

model Like {
  id     String @id @default(cuid())
  user   User   @relation(fields: [userId], references: [id])
  userId String
  nft    Nft    @relation(fields: [nftId], references: [id])
  nftId  String
}

model Buyer {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  Transaction Transaction[]
}

model Seller {
  id          String        @id @default(cuid())
  user        User          @relation(fields: [userId], references: [id])
  userId      String
  Transaction Transaction[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  Nft  Nft[]
}

model Collection {
  id   Int    @id @default(autoincrement())
  name String
  Nft  Nft[]
}

enum Role {
  USER
  ADMIN
}
